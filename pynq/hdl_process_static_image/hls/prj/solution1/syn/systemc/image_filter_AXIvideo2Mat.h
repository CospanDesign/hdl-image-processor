// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _image_filter_AXIvideo2Mat_HH_
#define _image_filter_AXIvideo2Mat_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct image_filter_AXIvideo2Mat : public sc_module {
    // Port declarations 24
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > video_in_TDATA;
    sc_in< sc_logic > video_in_TVALID;
    sc_out< sc_logic > video_in_TREADY;
    sc_in< sc_lv<2> > video_in_TKEEP;
    sc_in< sc_lv<2> > video_in_TSTRB;
    sc_in< sc_lv<1> > video_in_TUSER;
    sc_in< sc_lv<1> > video_in_TLAST;
    sc_in< sc_lv<1> > video_in_TID;
    sc_in< sc_lv<1> > video_in_TDEST;
    sc_in< sc_lv<11> > rows;
    sc_in< sc_lv<11> > cols;
    sc_out< sc_lv<8> > img_data_stream_0_V_din;
    sc_in< sc_logic > img_data_stream_0_V_full_n;
    sc_out< sc_logic > img_data_stream_0_V_write;
    sc_out< sc_lv<8> > img_data_stream_1_V_din;
    sc_in< sc_logic > img_data_stream_1_V_full_n;
    sc_out< sc_logic > img_data_stream_1_V_write;


    // Module declarations
    image_filter_AXIvideo2Mat(sc_module_name name);
    SC_HAS_PROCESS(image_filter_AXIvideo2Mat);

    ~image_filter_AXIvideo2Mat();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_25;
    sc_signal< sc_logic > video_in_TDATA_blk_n;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_57;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp1_stg0_fsm_4;
    sc_signal< bool > ap_sig_64;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it1;
    sc_signal< sc_lv<1> > exitcond4_i_fu_305_p2;
    sc_signal< sc_lv<1> > brmerge_i_fu_319_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_5;
    sc_signal< bool > ap_sig_84;
    sc_signal< sc_logic > img_data_stream_0_V_blk_n;
    sc_signal< sc_lv<1> > exitcond4_i_reg_383;
    sc_signal< sc_logic > img_data_stream_1_V_blk_n;
    sc_signal< sc_lv<1> > eol_reg_171;
    sc_signal< sc_lv<16> > axi_data_V_1_i_reg_182;
    sc_signal< sc_lv<11> > p_8_i_reg_193;
    sc_signal< sc_lv<1> > eol_i_reg_204;
    sc_signal< sc_lv<1> > axi_last_V_2_i_reg_216;
    sc_signal< sc_lv<16> > p_Val2_s_reg_229;
    sc_signal< bool > ap_sig_113;
    sc_signal< sc_lv<16> > tmp_data_V_reg_354;
    sc_signal< sc_lv<1> > tmp_last_V_reg_362;
    sc_signal< sc_lv<1> > exitcond3_i_fu_294_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_132;
    sc_signal< sc_lv<11> > i_V_fu_299_p2;
    sc_signal< sc_lv<11> > i_V_reg_378;
    sc_signal< bool > ap_sig_137;
    sc_signal< bool > ap_sig_144;
    sc_signal< sc_lv<11> > j_V_fu_310_p2;
    sc_signal< sc_lv<8> > tmp_fu_325_p1;
    sc_signal< sc_lv<8> > tmp_reg_396;
    sc_signal< sc_lv<8> > tmp_4_reg_401;
    sc_signal< bool > ap_sig_160;
    sc_signal< sc_lv<1> > axi_last_V_3_i_reg_241;
    sc_signal< sc_lv<1> > axi_last_V1_i_reg_140;
    sc_signal< sc_logic > ap_sig_cseq_ST_st8_fsm_6;
    sc_signal< bool > ap_sig_178;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_185;
    sc_signal< sc_lv<16> > axi_data_V_3_i_reg_253;
    sc_signal< sc_lv<16> > axi_data_V1_i_reg_150;
    sc_signal< sc_lv<11> > p_i_reg_160;
    sc_signal< sc_lv<1> > eol_phi_fu_174_p4;
    sc_signal< sc_lv<16> > axi_data_V_1_i_phi_fu_185_p4;
    sc_signal< sc_lv<1> > eol_i_phi_fu_208_p4;
    sc_signal< sc_lv<1> > ap_reg_phiprechg_axi_last_V_2_i_reg_216pp1_it0;
    sc_signal< sc_lv<16> > ap_reg_phiprechg_p_Val2_s_reg_229pp1_it0;
    sc_signal< sc_lv<16> > p_Val2_s_phi_fu_233_p4;
    sc_signal< sc_lv<1> > eol_2_i_reg_265;
    sc_signal< sc_lv<1> > sof_1_i_fu_92;
    sc_signal< sc_lv<1> > tmp_user_V_fu_285_p1;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    sc_signal< bool > ap_sig_77;
    sc_signal< bool > ap_sig_205;
    sc_signal< bool > ap_sig_152;
    sc_signal< bool > ap_sig_219;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_st1_fsm_0;
    static const sc_lv<7> ap_ST_st2_fsm_1;
    static const sc_lv<7> ap_ST_st3_fsm_2;
    static const sc_lv<7> ap_ST_st4_fsm_3;
    static const sc_lv<7> ap_ST_pp1_stg0_fsm_4;
    static const sc_lv<7> ap_ST_st7_fsm_5;
    static const sc_lv<7> ap_ST_st8_fsm_6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const bool ap_true;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_reg_phiprechg_axi_last_V_2_i_reg_216pp1_it0();
    void thread_ap_reg_phiprechg_p_Val2_s_reg_229pp1_it0();
    void thread_ap_sig_113();
    void thread_ap_sig_132();
    void thread_ap_sig_137();
    void thread_ap_sig_144();
    void thread_ap_sig_152();
    void thread_ap_sig_160();
    void thread_ap_sig_178();
    void thread_ap_sig_185();
    void thread_ap_sig_205();
    void thread_ap_sig_219();
    void thread_ap_sig_25();
    void thread_ap_sig_57();
    void thread_ap_sig_64();
    void thread_ap_sig_77();
    void thread_ap_sig_84();
    void thread_ap_sig_cseq_ST_pp1_stg0_fsm_4();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st7_fsm_5();
    void thread_ap_sig_cseq_ST_st8_fsm_6();
    void thread_axi_data_V_1_i_phi_fu_185_p4();
    void thread_brmerge_i_fu_319_p2();
    void thread_eol_i_phi_fu_208_p4();
    void thread_eol_phi_fu_174_p4();
    void thread_exitcond3_i_fu_294_p2();
    void thread_exitcond4_i_fu_305_p2();
    void thread_i_V_fu_299_p2();
    void thread_img_data_stream_0_V_blk_n();
    void thread_img_data_stream_0_V_din();
    void thread_img_data_stream_0_V_write();
    void thread_img_data_stream_1_V_blk_n();
    void thread_img_data_stream_1_V_din();
    void thread_img_data_stream_1_V_write();
    void thread_j_V_fu_310_p2();
    void thread_p_Val2_s_phi_fu_233_p4();
    void thread_tmp_fu_325_p1();
    void thread_tmp_user_V_fu_285_p1();
    void thread_video_in_TDATA_blk_n();
    void thread_video_in_TREADY();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
