

================================================================
== Vivado HLS Report for 'image_filter'
================================================================
* Date:           Tue Dec 13 04:46:29 2016

* Version:        2016.1 (Build 1538259 on Fri Apr 08 16:12:49 MDT 2016)
* Project:        prj
* Solution:       pynq_solution
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   7.00|      6.22|        0.88|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+---------+-----+---------+----------+
    |    Latency    |    Interval   | Pipeline |
    | min |   max   | min |   max   |   Type   |
    +-----+---------+-----+---------+----------+
    |  238|  2123562|  203|  2123558| dataflow |
    +-----+---------+-----+---------+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 14
* Pipeline: 0
* Dataflow Pipeline: 1
  DF-Pipeline-0: Size = 14, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 }

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
* FSM state operations: 

 <State 1>: 2.57ns
ST_1: cols_read [1/1] 1.00ns
Mat.exit12:18  %cols_read = call i32 @_ssdm_op_Read.ap_stable.i32(i32 %cols)

ST_1: rows_read [1/1] 1.00ns
Mat.exit12:19  %rows_read = call i32 @_ssdm_op_Read.ap_stable.i32(i32 %rows)

ST_1: img_0_data_stream_0_V [1/1] 0.00ns
Mat.exit12:20  %img_0_data_stream_0_V = alloca i8, align 1

ST_1: img_0_data_stream_1_V [1/1] 0.00ns
Mat.exit12:23  %img_0_data_stream_1_V = alloca i8, align 1

ST_1: img_1_data_stream_0_V [1/1] 0.00ns
Mat.exit12:26  %img_1_data_stream_0_V = alloca i8, align 1

ST_1: img_1_data_stream_1_V [1/1] 0.00ns
Mat.exit12:29  %img_1_data_stream_1_V = alloca i8, align 1

ST_1: img_1_data_stream_0_V_13 [1/1] 0.00ns
Mat.exit12:32  %img_1_data_stream_0_V_13 = alloca i8, align 1

ST_1: img_1_data_stream_1_V_15 [1/1] 0.00ns
Mat.exit12:35  %img_1_data_stream_1_V_15 = alloca i8, align 1

ST_1: img_1_Y_data_stream_0_V [1/1] 0.00ns
Mat.exit12:38  %img_1_Y_data_stream_0_V = alloca i8, align 1

ST_1: img_1_UV_data_stream_0_V [1/1] 0.00ns
Mat.exit12:41  %img_1_UV_data_stream_0_V = alloca i8, align 1

ST_1: img_2_data_stream_0_V [1/1] 0.00ns
Mat.exit12:44  %img_2_data_stream_0_V = alloca i8, align 1

ST_1: img_2_data_stream_1_V [1/1] 0.00ns
Mat.exit12:47  %img_2_data_stream_1_V = alloca i8, align 1

ST_1: mask_data_stream_0_V [1/1] 0.00ns
Mat.exit12:50  %mask_data_stream_0_V = alloca i8, align 1

ST_1: dmask_data_stream_0_V [1/1] 0.00ns
Mat.exit12:53  %dmask_data_stream_0_V = alloca i8, align 1

ST_1: tmp [1/1] 0.00ns
Mat.exit12:63  %tmp = trunc i32 %rows_read to i11

ST_1: tmp_1 [1/1] 0.00ns
Mat.exit12:64  %tmp_1 = trunc i32 %cols_read to i11

ST_1: stg_31 [2/2] 1.57ns
Mat.exit12:65  call fastcc void @image_filter_AXIvideo2Mat(i16* %INPUT_STREAM_V_data_V, i2* %INPUT_STREAM_V_keep_V, i2* %INPUT_STREAM_V_strb_V, i1* %INPUT_STREAM_V_user_V, i1* %INPUT_STREAM_V_last_V, i1* %INPUT_STREAM_V_id_V, i1* %INPUT_STREAM_V_dest_V, i11 %tmp, i11 %tmp_1, i8* %img_0_data_stream_0_V, i8* %img_0_data_stream_1_V)


 <State 2>: 0.00ns
ST_2: stg_32 [1/2] 0.00ns
Mat.exit12:65  call fastcc void @image_filter_AXIvideo2Mat(i16* %INPUT_STREAM_V_data_V, i2* %INPUT_STREAM_V_keep_V, i2* %INPUT_STREAM_V_strb_V, i1* %INPUT_STREAM_V_user_V, i1* %INPUT_STREAM_V_last_V, i1* %INPUT_STREAM_V_id_V, i1* %INPUT_STREAM_V_dest_V, i11 %tmp, i11 %tmp_1, i8* %img_0_data_stream_0_V, i8* %img_0_data_stream_1_V)


 <State 3>: 0.00ns
ST_3: stg_33 [2/2] 0.00ns
Mat.exit12:66  call fastcc void @image_filter_Duplicate(i11 %tmp, i11 %tmp_1, i8* %img_0_data_stream_0_V, i8* %img_0_data_stream_1_V, i8* %img_1_data_stream_0_V, i8* %img_1_data_stream_1_V, i8* %img_1_data_stream_0_V_13, i8* %img_1_data_stream_1_V_15)


 <State 4>: 0.00ns
ST_4: stg_34 [1/2] 0.00ns
Mat.exit12:66  call fastcc void @image_filter_Duplicate(i11 %tmp, i11 %tmp_1, i8* %img_0_data_stream_0_V, i8* %img_0_data_stream_1_V, i8* %img_1_data_stream_0_V, i8* %img_1_data_stream_1_V, i8* %img_1_data_stream_0_V_13, i8* %img_1_data_stream_1_V_15)


 <State 5>: 0.00ns
ST_5: stg_35 [2/2] 0.00ns
Mat.exit12:67  call fastcc void @"image_filter_Split<1080, 1920, 2048, 0>"(i11 %tmp, i11 %tmp_1, i8* %img_1_data_stream_0_V, i8* %img_1_data_stream_1_V, i8* %img_1_Y_data_stream_0_V, i8* %img_1_UV_data_stream_0_V)


 <State 6>: 0.00ns
ST_6: stg_36 [1/2] 0.00ns
Mat.exit12:67  call fastcc void @"image_filter_Split<1080, 1920, 2048, 0>"(i11 %tmp, i11 %tmp_1, i8* %img_1_data_stream_0_V, i8* %img_1_data_stream_1_V, i8* %img_1_Y_data_stream_0_V, i8* %img_1_UV_data_stream_0_V)


 <State 7>: 1.84ns
ST_7: stg_37 [2/2] 0.00ns
Mat.exit12:68  call fastcc void @"image_filter_Consume<1080, 1920, 0>"(i11 %tmp, i11 %tmp_1, i8* %img_1_UV_data_stream_0_V)

ST_7: stg_38 [2/2] 1.84ns
Mat.exit12:69  call fastcc void @image_filter_FAST_t_opr(i11 %tmp, i11 %tmp_1, i8* %img_1_Y_data_stream_0_V, i8* %mask_data_stream_0_V)


 <State 8>: 0.00ns
ST_8: stg_39 [1/2] 0.00ns
Mat.exit12:68  call fastcc void @"image_filter_Consume<1080, 1920, 0>"(i11 %tmp, i11 %tmp_1, i8* %img_1_UV_data_stream_0_V)

ST_8: stg_40 [1/2] 0.00ns
Mat.exit12:69  call fastcc void @image_filter_FAST_t_opr(i11 %tmp, i11 %tmp_1, i8* %img_1_Y_data_stream_0_V, i8* %mask_data_stream_0_V)


 <State 9>: 0.00ns
ST_9: stg_41 [2/2] 0.00ns
Mat.exit12:70  call fastcc void @"image_filter_Dilate<0, 0, 1080, 1920>"(i11 %tmp, i11 %tmp_1, i8* %mask_data_stream_0_V, i8* %dmask_data_stream_0_V)


 <State 10>: 0.00ns
ST_10: stg_42 [1/2] 0.00ns
Mat.exit12:70  call fastcc void @"image_filter_Dilate<0, 0, 1080, 1920>"(i11 %tmp, i11 %tmp_1, i8* %mask_data_stream_0_V, i8* %dmask_data_stream_0_V)


 <State 11>: 0.00ns
ST_11: stg_43 [2/2] 0.00ns
Mat.exit12:71  call fastcc void @"image_filter_PaintMask<2048, 0, 1080, 1920>"(i11 %tmp, i11 %tmp_1, i8* %img_1_data_stream_0_V_13, i8* %img_1_data_stream_1_V_15, i8* %dmask_data_stream_0_V, i8* %img_2_data_stream_0_V, i8* %img_2_data_stream_1_V)


 <State 12>: 0.00ns
ST_12: stg_44 [1/2] 0.00ns
Mat.exit12:71  call fastcc void @"image_filter_PaintMask<2048, 0, 1080, 1920>"(i11 %tmp, i11 %tmp_1, i8* %img_1_data_stream_0_V_13, i8* %img_1_data_stream_1_V_15, i8* %dmask_data_stream_0_V, i8* %img_2_data_stream_0_V, i8* %img_2_data_stream_1_V)


 <State 13>: 1.84ns
ST_13: stg_45 [2/2] 1.84ns
Mat.exit12:72  call fastcc void @image_filter_Mat2AXIvideo(i11 %tmp, i11 %tmp_1, i8* %img_2_data_stream_0_V, i8* %img_2_data_stream_1_V, i16* %OUTPUT_STREAM_V_data_V, i2* %OUTPUT_STREAM_V_keep_V, i2* %OUTPUT_STREAM_V_strb_V, i1* %OUTPUT_STREAM_V_user_V, i1* %OUTPUT_STREAM_V_last_V, i1* %OUTPUT_STREAM_V_id_V, i1* %OUTPUT_STREAM_V_dest_V)


 <State 14>: 3.06ns
ST_14: stg_46 [1/1] 0.00ns
Mat.exit12:0  call void (...)* @_ssdm_op_SpecDataflowPipeline(i32 -1, [1 x i8]* @p_str1807) nounwind

ST_14: stg_47 [1/1] 0.00ns
Mat.exit12:1  call void (...)* @_ssdm_op_SpecBitsMap(i16* %INPUT_STREAM_V_data_V), !map !289

ST_14: stg_48 [1/1] 0.00ns
Mat.exit12:2  call void (...)* @_ssdm_op_SpecBitsMap(i2* %INPUT_STREAM_V_keep_V), !map !293

ST_14: stg_49 [1/1] 0.00ns
Mat.exit12:3  call void (...)* @_ssdm_op_SpecBitsMap(i2* %INPUT_STREAM_V_strb_V), !map !297

ST_14: stg_50 [1/1] 0.00ns
Mat.exit12:4  call void (...)* @_ssdm_op_SpecBitsMap(i1* %INPUT_STREAM_V_user_V), !map !301

ST_14: stg_51 [1/1] 0.00ns
Mat.exit12:5  call void (...)* @_ssdm_op_SpecBitsMap(i1* %INPUT_STREAM_V_last_V), !map !305

ST_14: stg_52 [1/1] 0.00ns
Mat.exit12:6  call void (...)* @_ssdm_op_SpecBitsMap(i1* %INPUT_STREAM_V_id_V), !map !309

ST_14: stg_53 [1/1] 0.00ns
Mat.exit12:7  call void (...)* @_ssdm_op_SpecBitsMap(i1* %INPUT_STREAM_V_dest_V), !map !313

ST_14: stg_54 [1/1] 0.00ns
Mat.exit12:8  call void (...)* @_ssdm_op_SpecBitsMap(i16* %OUTPUT_STREAM_V_data_V), !map !317

ST_14: stg_55 [1/1] 0.00ns
Mat.exit12:9  call void (...)* @_ssdm_op_SpecBitsMap(i2* %OUTPUT_STREAM_V_keep_V), !map !321

ST_14: stg_56 [1/1] 0.00ns
Mat.exit12:10  call void (...)* @_ssdm_op_SpecBitsMap(i2* %OUTPUT_STREAM_V_strb_V), !map !325

ST_14: stg_57 [1/1] 0.00ns
Mat.exit12:11  call void (...)* @_ssdm_op_SpecBitsMap(i1* %OUTPUT_STREAM_V_user_V), !map !329

ST_14: stg_58 [1/1] 0.00ns
Mat.exit12:12  call void (...)* @_ssdm_op_SpecBitsMap(i1* %OUTPUT_STREAM_V_last_V), !map !333

ST_14: stg_59 [1/1] 0.00ns
Mat.exit12:13  call void (...)* @_ssdm_op_SpecBitsMap(i1* %OUTPUT_STREAM_V_id_V), !map !337

ST_14: stg_60 [1/1] 0.00ns
Mat.exit12:14  call void (...)* @_ssdm_op_SpecBitsMap(i1* %OUTPUT_STREAM_V_dest_V), !map !341

ST_14: stg_61 [1/1] 0.00ns
Mat.exit12:15  call void (...)* @_ssdm_op_SpecBitsMap(i32 %rows), !map !345

ST_14: stg_62 [1/1] 0.00ns
Mat.exit12:16  call void (...)* @_ssdm_op_SpecBitsMap(i32 %cols), !map !351

ST_14: stg_63 [1/1] 0.00ns
Mat.exit12:17  call void (...)* @_ssdm_op_SpecTopModule([13 x i8]* @image_filter_str) nounwind

ST_14: empty [1/1] 0.00ns
Mat.exit12:21  %empty = call i32 (...)* @_ssdm_op_SpecChannel([23 x i8]* @img_0_OC_data_stream_LF_0_NF_s, i32 1, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 1, i32 1, i8* %img_0_data_stream_0_V, i8* %img_0_data_stream_0_V)

ST_14: stg_65 [1/1] 0.00ns
Mat.exit12:22  call void (...)* @_ssdm_op_SpecInterface(i8* %img_0_data_stream_0_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str)

ST_14: empty_10 [1/1] 0.00ns
Mat.exit12:24  %empty_10 = call i32 (...)* @_ssdm_op_SpecChannel([23 x i8]* @img_0_OC_data_stream_LF_1_NF_s, i32 1, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 1, i32 1, i8* %img_0_data_stream_1_V, i8* %img_0_data_stream_1_V)

ST_14: stg_67 [1/1] 0.00ns
Mat.exit12:25  call void (...)* @_ssdm_op_SpecInterface(i8* %img_0_data_stream_1_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str)

ST_14: empty_11 [1/1] 0.00ns
Mat.exit12:27  %empty_11 = call i32 (...)* @_ssdm_op_SpecChannel([23 x i8]* @img_1_OC_data_stream_LF_0_NF_s_1, i32 1, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 1, i32 1, i8* %img_1_data_stream_0_V, i8* %img_1_data_stream_0_V)

ST_14: stg_69 [1/1] 0.00ns
Mat.exit12:28  call void (...)* @_ssdm_op_SpecInterface(i8* %img_1_data_stream_0_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str)

ST_14: empty_12 [1/1] 0.00ns
Mat.exit12:30  %empty_12 = call i32 (...)* @_ssdm_op_SpecChannel([23 x i8]* @img_1_OC_data_stream_LF_1_NF_s_0, i32 1, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 1, i32 1, i8* %img_1_data_stream_1_V, i8* %img_1_data_stream_1_V)

ST_14: stg_71 [1/1] 0.00ns
Mat.exit12:31  call void (...)* @_ssdm_op_SpecInterface(i8* %img_1_data_stream_1_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str)

ST_14: empty_14 [1/1] 0.00ns
Mat.exit12:33  %empty_14 = call i32 (...)* @_ssdm_op_SpecChannel([24 x i8]* @img_1_OC_data_stream_LF_0_NF_s, i32 1, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 20000, i32 20000, i8* %img_1_data_stream_0_V_13, i8* %img_1_data_stream_0_V_13)

ST_14: stg_73 [1/1] 0.00ns
Mat.exit12:34  call void (...)* @_ssdm_op_SpecInterface(i8* %img_1_data_stream_0_V_13, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str)

ST_14: empty_16 [1/1] 0.00ns
Mat.exit12:36  %empty_16 = call i32 (...)* @_ssdm_op_SpecChannel([24 x i8]* @img_1_OC_data_stream_LF_1_NF_s, i32 1, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 20000, i32 20000, i8* %img_1_data_stream_1_V_15, i8* %img_1_data_stream_1_V_15)

ST_14: stg_75 [1/1] 0.00ns
Mat.exit12:37  call void (...)* @_ssdm_op_SpecInterface(i8* %img_1_data_stream_1_V_15, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str)

ST_14: empty_17 [1/1] 0.00ns
Mat.exit12:39  %empty_17 = call i32 (...)* @_ssdm_op_SpecChannel([25 x i8]* @img_1_Y_OC_data_stream_LF_0_NF, i32 1, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 1, i32 1, i8* %img_1_Y_data_stream_0_V, i8* %img_1_Y_data_stream_0_V)

ST_14: stg_77 [1/1] 0.00ns
Mat.exit12:40  call void (...)* @_ssdm_op_SpecInterface(i8* %img_1_Y_data_stream_0_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str)

ST_14: empty_18 [1/1] 0.00ns
Mat.exit12:42  %empty_18 = call i32 (...)* @_ssdm_op_SpecChannel([26 x i8]* @img_1_UV_OC_data_stream_LF_0_N, i32 1, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 1, i32 1, i8* %img_1_UV_data_stream_0_V, i8* %img_1_UV_data_stream_0_V)

ST_14: stg_79 [1/1] 0.00ns
Mat.exit12:43  call void (...)* @_ssdm_op_SpecInterface(i8* %img_1_UV_data_stream_0_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str)

ST_14: empty_19 [1/1] 0.00ns
Mat.exit12:45  %empty_19 = call i32 (...)* @_ssdm_op_SpecChannel([23 x i8]* @img_2_OC_data_stream_LF_0_NF_s, i32 1, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 1, i32 1, i8* %img_2_data_stream_0_V, i8* %img_2_data_stream_0_V)

ST_14: stg_81 [1/1] 0.00ns
Mat.exit12:46  call void (...)* @_ssdm_op_SpecInterface(i8* %img_2_data_stream_0_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str)

ST_14: empty_20 [1/1] 0.00ns
Mat.exit12:48  %empty_20 = call i32 (...)* @_ssdm_op_SpecChannel([23 x i8]* @img_2_OC_data_stream_LF_1_NF_s, i32 1, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 1, i32 1, i8* %img_2_data_stream_1_V, i8* %img_2_data_stream_1_V)

ST_14: stg_83 [1/1] 0.00ns
Mat.exit12:49  call void (...)* @_ssdm_op_SpecInterface(i8* %img_2_data_stream_1_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str)

ST_14: empty_21 [1/1] 0.00ns
Mat.exit12:51  %empty_21 = call i32 (...)* @_ssdm_op_SpecChannel([22 x i8]* @mask_OC_data_stream_LF_0_NF_O, i32 1, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 1, i32 1, i8* %mask_data_stream_0_V, i8* %mask_data_stream_0_V)

ST_14: stg_85 [1/1] 0.00ns
Mat.exit12:52  call void (...)* @_ssdm_op_SpecInterface(i8* %mask_data_stream_0_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str)

ST_14: empty_22 [1/1] 0.00ns
Mat.exit12:54  %empty_22 = call i32 (...)* @_ssdm_op_SpecChannel([23 x i8]* @dmask_OC_data_stream_LF_0_NF_s, i32 1, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 1, i32 1, i8* %dmask_data_stream_0_V, i8* %dmask_data_stream_0_V)

ST_14: stg_87 [1/1] 0.00ns
Mat.exit12:55  call void (...)* @_ssdm_op_SpecInterface(i8* %dmask_data_stream_0_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str)

ST_14: stg_88 [1/1] 0.00ns
Mat.exit12:56  call void (...)* @_ssdm_op_SpecInterface(i16* %INPUT_STREAM_V_data_V, i2* %INPUT_STREAM_V_keep_V, i2* %INPUT_STREAM_V_strb_V, i1* %INPUT_STREAM_V_user_V, i1* %INPUT_STREAM_V_last_V, i1* %INPUT_STREAM_V_id_V, i1* %INPUT_STREAM_V_dest_V, [5 x i8]* @p_str1805, i32 0, i32 0, i32 0, i32 0, [13 x i8]* @p_str1806, [1 x i8]* @p_str1807, [1 x i8]* @p_str1807, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1807) nounwind

ST_14: stg_89 [1/1] 0.00ns
Mat.exit12:57  call void (...)* @_ssdm_op_SpecInterface(i16* %OUTPUT_STREAM_V_data_V, i2* %OUTPUT_STREAM_V_keep_V, i2* %OUTPUT_STREAM_V_strb_V, i1* %OUTPUT_STREAM_V_user_V, i1* %OUTPUT_STREAM_V_last_V, i1* %OUTPUT_STREAM_V_id_V, i1* %OUTPUT_STREAM_V_dest_V, [5 x i8]* @p_str1805, i32 0, i32 0, i32 0, i32 0, [14 x i8]* @p_str1808, [1 x i8]* @p_str1807, [1 x i8]* @p_str1807, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1807) nounwind

ST_14: stg_90 [1/1] 0.00ns
Mat.exit12:58  call void (...)* @_ssdm_op_SpecInterface(i32 %rows, [10 x i8]* @p_str1809, i32 0, i32 0, i32 0, i32 0, [12 x i8]* @p_str1810, [5 x i8]* @p_str1811, [1 x i8]* @p_str1807, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1807) nounwind

ST_14: stg_91 [1/1] 0.00ns
Mat.exit12:59  call void (...)* @_ssdm_op_SpecInterface(i32 %cols, [10 x i8]* @p_str1809, i32 0, i32 0, i32 0, i32 0, [12 x i8]* @p_str1810, [5 x i8]* @p_str1812, [1 x i8]* @p_str1807, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1807) nounwind

ST_14: stg_92 [1/1] 0.00ns
Mat.exit12:60  call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str1809, i32 0, i32 0, i32 0, i32 0, [12 x i8]* @p_str1810, [1 x i8]* @p_str1807, [1 x i8]* @p_str1807, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1807) nounwind

ST_14: stg_93 [1/1] 0.00ns
Mat.exit12:61  call void (...)* @_ssdm_op_SpecInterface(i32 %rows, [10 x i8]* @p_str1813, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1807, [1 x i8]* @p_str1807, [1 x i8]* @p_str1807, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1807) nounwind

ST_14: stg_94 [1/1] 0.00ns
Mat.exit12:62  call void (...)* @_ssdm_op_SpecInterface(i32 %cols, [10 x i8]* @p_str1813, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1807, [1 x i8]* @p_str1807, [1 x i8]* @p_str1807, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1807) nounwind

ST_14: stg_95 [1/2] 3.06ns
Mat.exit12:72  call fastcc void @image_filter_Mat2AXIvideo(i11 %tmp, i11 %tmp_1, i8* %img_2_data_stream_0_V, i8* %img_2_data_stream_1_V, i16* %OUTPUT_STREAM_V_data_V, i2* %OUTPUT_STREAM_V_keep_V, i2* %OUTPUT_STREAM_V_strb_V, i1* %OUTPUT_STREAM_V_user_V, i1* %OUTPUT_STREAM_V_last_V, i1* %OUTPUT_STREAM_V_id_V, i1* %OUTPUT_STREAM_V_dest_V)

ST_14: stg_96 [1/1] 0.00ns
Mat.exit12:73  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 7ns, clock uncertainty: 0.875ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
